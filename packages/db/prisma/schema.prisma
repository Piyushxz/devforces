// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role Role
  leaderboard Leaderboard[]
}

enum Role{
  User 
  Admin
}

model Contest{
  id String @id @default(uuid())
  name String
  description String
  startTime DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contestToChallengeMapping contestToChallengeMapping[]
  leaderboard Leaderboard[]

}

model Challenge{    
id String @id @default(uuid())
title String
notionDocId String
maxPoints Int
contestToChallengeMapping contestToChallengeMapping[]
}

model Submission{
  id String @id @default(uuid())
contestToChallengeMappingId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contestToChallengeMapping contestToChallengeMapping @relation(fields: [contestToChallengeMappingId], references: [id])
  points Int
}

model Leaderboard{
  id String @id @default(uuid())
  contestId String
  userId String
  user User  @relation(fields: [userId], references: [id])
  Rank Int
  contest Contest @relation(fields: [contestId], references: [id])
  @@unique([contestId,userId])
}

model contestToChallengeMapping{
  id String @id @default(uuid())
  contestId String
  challengeId String
  contest Contest @relation(fields: [contestId], references: [id])
  challenge Challenge @relation(fields: [challengeId], references: [id])
  index Int
  @@unique([contestId,challengeId])
  submission Submission[]
}

